---
import { api } from "~/utils/api";
import Layout from "~/layouts/Layout.astro";
import "~/styles/description.css";
import { getSession } from "auth-astro/server";

import type { Image, Product, ProductPackage } from "@acme/db";

import AddToCartForm from "~/components/AddToCartForm";

const session = await getSession(Astro.request);
// import { ProductInfo } from "./ProductInfo";

type PackageType = ProductPackage & {
  products: (Product & {
    image: Image;
  })[];
  image: Image;
};

interface MyHTML {
  [key: string]: string;
}

const userData = await api.users.show.query({
  email: session?.user?.email || undefined,
});

export async function getStaticPaths() {
  const data = await api.package.all.query();

  return data.map((pack) => {
    return {
      params: { pack_slug: pack.slug },
      props: { pack },
    };
  });
}

const slug = Astro.params.pack_slug as string;
const data = (await api.package.show.query({ slug })) as PackageType;
const productSum = data?.products
  .map((p) => p.price - p.price * ((userData?.role?.discount || 0) / 10000))
  .reduce((acc, o) => acc + o, 0);

function descriptionFormat(desc: string): string {
  const productDesc = desc || "{}";
  const parseDesc = JSON.parse(productDesc) as Object[];
  const htmlKey = parseDesc[1] as MyHTML;
  return htmlKey["html"];
}

export const prerender = true;
---

<Layout title="paquete">
  <div class="border-b border-gray-200">
    <nav aria-label="Breadcrumb" class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
      <ol role="list" class="flex items-center space-x-4 py-4">
        <li>
          <div class="flex items-center">
            <a href="/" class="mr-4 text-sm font-medium text-gray-900">Inicio</a
            >
            <svg
              viewBox="0 0 6 20"
              aria-hidden="true"
              class="h-5 w-auto text-gray-300"
            >
              <path
                d="M4.878 4.34H3.551L.27 16.532h1.327l3.281-12.19z"
                fill="currentColor"></path>
            </svg>
          </div>
        </li>

        <li>
          <div class="flex items-center">
            <a href="/products" class="mr-4 text-sm font-medium text-gray-900"
              >Equipo de laboratorio</a
            >
            <svg
              viewBox="0 0 6 20"
              aria-hidden="true"
              class="h-5 w-auto text-gray-300"
            >
              <path
                d="M4.878 4.34H3.551L.27 16.532h1.327l3.281-12.19z"
                fill="currentColor"></path>
            </svg>
          </div>
        </li>

        <li class="text-sm">
          <span
            aria-current="page"
            class="font-medium cursor-default text-gray-500 hover:text-gray-600"
            >Paquete {data?.name}</span
          >
        </li>
      </ol>
    </nav>
  </div>
  <section class="pb-6 px-10 flex justify-center max-w-[2000px] sm:pb-8">
    <div>
      <!-- <nav aria-label="Breadcrumb" class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
          <ol role="list" class="flex items-center space-x-4 py-4">
            <li>
              <div class="flex items-center">
                <a href="/" class="mr-4 text-sm font-medium text-gray-900">Inicio</a>
                <svg viewBox="0 0 6 20" aria-hidden="true" class="h-5 w-auto text-gray-300">
                  <path d="M4.878 4.34H3.551L.27 16.532h1.327l3.281-12.19z" fill="currentColor" />
                </svg>
              </div>
            </li>
            <li>
              <div class="flex items-center">
                <a href="/products" class="mr-4 text-sm font-medium text-gray-900">Productos</a>
                <svg viewBox="0 0 6 20" aria-hidden="true" class="h-5 w-auto text-gray-300">
                  <path d="M4.878 4.34H3.551L.27 16.532h1.327l3.281-12.19z" fill="currentColor" />
                </svg>
              </div>
            </li>
            <li class="text-sm">
              <span  aria-current="page" class="font-medium cursor-pointer text-gray-500 hover:text-gray-600">{data.name}</span>
            </li>
          </ol>
        </nav> -->
      <div
        class="lg:col-gap-12 xl:col-gap-16 mt-8 grid grid-cols-1 gap-12 lg:mt-12 lg:grid-cols-5 lg:gap-16"
      >
        <div class="lg:col-span-3 lg:row-end-1">
          <div class="lg:order-2 lg:ml-5">
            <div class="max-w-xl overflow-hidden rounded-lg">
              {/* eslint-disable-next-line @next/next/no-img-element*/}
              <img
                class="h-[512px] w-full max-w-full object-contain"
                src={`https://d26xfdx1w8q2y3.cloudfront.net/${data.image?.path}/${data.image?.original}`}
                alt=""
              />
            </div>
          </div>
        </div>

        <div class="lg:col-span-2 lg:row-span-2 lg:row-end-2">
          <h1 class="sm: text-2xl font-bold text-gray-900 sm:text-3xl">
            Paquete {data.name}
          </h1>

          <div class="mt-5 flex items-center">
            <div class="flex items-center"></div>
          </div>

          <h2 class="mt-8 text-base font-medium text-gray-900">
            Acerca del paquete:
          </h2>
          <div class="relative mt-2 ml-2 overflow-x-auto">
            <p>{data.shortDescription}</p>
          </div>

          <div
            class="mt-10 flex flex-col items-center justify-between space-y-4 border-t border-b py-4 sm:flex-row sm:space-y-0"
          >
            <div class="flex items-end static">
              <div>
                <h1 class="text-2xl font-bold mr-2">
                  ${
                    (
                      (data.price -
                        data.price *
                          ((userData?.role?.discount || 0) / 10000)) /
                      100
                    )
                      .toFixed(2)
                      .toString()
                      .replace(/,/g, "")
                      .replace(/\B(?=(\d{3})+(?!\d))/g, ",")
                  }
                  <span class="text-base font-normal">MXN</span>
                </h1>
                Precio fuera del paquete:
                <p class="line-through ml-2">
                  {
                    productSum &&
                      "$" +
                        ((productSum * 1.1) / 100)
                          .toFixed(2)
                          .toString()
                          .replace(/,/g, "")
                          .replace(/\B(?=(\d{3})+(?!\d))/g, ",")
                  }
                </p>
              </div>
            </div>
            <AddToCartForm item={data} client:load>
              <button
                type="submit"
                id="alert"
                class="inline-flex items-center justify-center rounded-md border-2 border-transparent bg-gray-900 bg-none px-8 py-3 text-center text-base font-bold text-white transition-all duration-200 ease-in-out focus:shadow hover:bg-gray-800 lg:ml-6"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="shrink-0 mr-3 h-5 w-5 lg:sr-only xl:not-sr-only xl:shrink-0 xl:mr-3 xl:h-5 xl:w-5"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                  stroke-width="2"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
                </svg>
                A&ntildeadir al carrito
              </button>
            </AddToCartForm>
          </div>

          <ul class="mt-8 space-y-2">
            <li
              class="flex items-center text-left text-sm font-medium text-gray-600"
            >
              <svg
                class="mr-2 block h-5 w-5 align-middle text-gray-500"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                  class=""></path>
              </svg>
              Envíos sin costo en compras mayores a $2,000 MXN
            </li>

            <li
              class="flex items-center text-left text-sm font-medium text-gray-600"
            >
              <svg
                class="mr-2 block h-5 w-5 align-middle text-gray-500"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"
                  class=""></path>
              </svg>
              Cancelación flexible
            </li>
          </ul>
        </div>
        <div class="lg:col-span-3">
          {
            data.description && (
              <div class="mt-8 flow-root sm:mt-12">
                <h1 class="mt-8 text-3xl font-bold">Descripción</h1>
                <div
                  class="ml-2 mt-4"
                  set:html={descriptionFormat(data.description).toString()}
                />
              </div>
            )
          }
        </div>
      </div>
      <!--
  This example requires some changes to your config:
  
  ```
  // tailwind.config.js
  module.exports = {
    // ...
    plugins: [
      // ...
      require('@tailwindcss/aspect-ratio'),
    ],
  }
  ```
-->
      <div
        class="mx-auto max-w-2xl px-4 py-16 sm:px-6 sm:py-24 lg:max-w-7xl lg:px-8"
      >
        <h2 class="sr-only">Productos del paquete</h2>

        <div
          class="grid grid-cols-1 gap-y-4 sm:grid-cols-2 sm:gap-x-6 sm:gap-y-10 lg:grid-cols-3 lg:gap-x-8"
        >
          {
            data.products.map((product) => (
              <div class="group relative flex flex-col overflow-hidden rounded-lg border border-gray-200 bg-white">
                <div class="aspect-h-4 aspect-w-3 sm:aspect-none bg-gray-200 group-hover:opacity-75 sm:h-96">
                  {product && (
                    <img
                      src={`https://d26xfdx1w8q2y3.cloudfront.net/${product.image.path}/${product.image.original}`}
                      alt="Eight shirts arranged on table in black, olive, grey, blue, white, red, mustard, and green."
                      class="h-full w-full object-contain object-center sm:h-full sm:w-full"
                    />
                  )}
                </div>
                <div class="flex flex-1 flex-col space-y-2 p-4">
                  <h3 class="text-sm font-medium text-gray-900">
                    <a href={`/${product?.slug}`}>
                      <span aria-hidden="true" class="absolute inset-0" />
                      {product.name}
                    </a>
                  </h3>
                  <p class="text-sm text-gray-500">
                    {product.shortDescription}
                  </p>
                  <div class="flex flex-1 flex-col justify-end">
                    <p class="text-sm italic text-gray-500">{product.brand}</p>
                    <p class="text-base font-medium text-gray-900">
                      {" "}
                      $
                      {
                        // (product.price / 100)
                        (
                          (product.price -
                            product.price *
                              ((userData?.role?.discount || 0) / 10000)) /
                          100
                        )
                          .toFixed(2)
                          .toString()
                          .replace(/,/g, "")
                          .replace(/\B(?=(\d{3})+(?!\d))/g, ",")
                      }
                    </p>
                  </div>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </section>
</Layout>
