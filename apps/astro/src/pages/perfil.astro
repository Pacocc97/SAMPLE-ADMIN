---
import { getSession } from "auth-astro/server";

import { apiPublic } from "~/utils/api";
import ClientAddresses from "~/components/ClientAddresses";
import Layout from "~/layouts/Layout.astro";

let session = await getSession(Astro.request);
if (!session) {
  return Astro.redirect("/");
}

const user = await apiPublic.users.show.query({
  email: session?.user?.email || undefined,
});

export const prerender = true;
---

<Layout title="dashboard">
  <main>
    <header class="border-b border-white/5">
      <!-- Secondary navigation -->
      <!-- <nav class="flex overflow-x-auto py-4">
          <ul role="list" class="flex min-w-full flex-none gap-x-6 px-4 text-sm font-semibold leading-6 text-gray-600 sm:px-6 lg:px-8">
            <li>
              <a href="#" class="text-indigo-400">Account</a>
            </li>
            <li>
              <a href="#" class="">Notifications</a>
            </li>
            <li>
              <a href="#" class="">Billing</a>
            </li>
            <li>
              <a href="#" class="">Teams</a>
            </li>
            <li>
              <a href="#" class="">Integrations</a>
            </li>
          </ul>
        </nav> -->
    </header>

    <!-- Settings forms -->
    <div class="divide-y divide-white/5">
      <div
        class="grid max-w-7xl grid-cols-1 gap-x-8 gap-y-10 px-4 py-16 sm:px-6 md:grid-cols-3 lg:px-8"
      >
        <div>
          <h2 class="text-base font-semibold leading-7 text-black">
            Información Personal
          </h2>
          <p class="mt-1 text-sm leading-6 text-gray-600">
            Use una dirección de correo electrónico permanente para recibir
            información a ese correo.
          </p>
        </div>

        <form class="md:col-span-2">
          <div
            class="grid grid-cols-1 gap-x-6 gap-y-8 sm:max-w-xl sm:grid-cols-6"
          >
            <div class="col-span-full flex items-center gap-x-8">
              <img
                src={session?.user?.image}
                alt=""
                class="h-24 w-24 flex-none rounded-lg bg-gray-800 object-cover"
              />
              <div>
                <button
                  type="button"
                  class="rounded-md bg-white/10 px-3 py-2 text-sm font-semibold text-black shadow-sm hover:bg-white/20"
                  >Cambiar foto</button
                >
                <p class="mt-2 text-xs leading-5 text-gray-600">
                  JPG, GIF o PNG. 1MB max.
                </p>
              </div>
            </div>

            <div class="col-span-full">
              <label
                for="first-name"
                class="block text-sm font-medium leading-6 text-black"
                >Nombre</label
              >
              <div class="mt-2">
                <!-- <input type="text"
                  default
                  name="name" id="name" autocomplete="name" class="block w-full rounded-md border bg-white/5 py-1.5 text-black shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6"> -->
                <p>{session?.user?.name}</p>
              </div>
            </div>

            <!-- <div class="sm:col-span-3">
                <label for="first-name" class="block text-sm font-medium leading-6 text-black">Nombre(s)</label>
                <div class="mt-2">
                  <input type="text" name="first-name" id="first-name" autocomplete="given-name" class="block w-full rounded-md border bg-white/5 py-1.5 text-black shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6">
                </div>
              </div>

              <div class="sm:col-span-3">
                <label for="last-name" class="block text-sm font-medium leading-6 text-black">Apellidos</label>
                <div class="mt-2">
                  <input type="text" name="last-name" id="last-name" autocomplete="family-name" class="block w-full rounded-md border bg-white/5 py-1.5 text-black shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6">
                </div>
              </div> -->

            <div class="col-span-full">
              <label
                for="email"
                class="block text-sm font-medium leading-6 text-black"
                >Correo electrónico</label
              >
              <div class="mt-2">
                <!-- <input id="email" name="email" type="email" autocomplete="email" class="block w-full rounded-md border bg-white/5 py-1.5 text-black shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6"> -->
                <p>{session?.user?.email}</p>
              </div>
            </div>

            <!-- <div class="col-span-full">
                <label for="username" class="block text-sm font-medium leading-6 text-black">Nombre de usuario</label>
                <div class="mt-2">
                  <div class="flex rounded-md bg-white/5 ring-1 ring-inset ring-white/10 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-500">
                    <span class="flex select-none items-center pl-3 text-gray-600 sm:text-sm">example.com/</span>
                    <input type="text" name="username" id="username" autocomplete="username" class="flex-1 border bg-transparent py-1.5 pl-1 text-black focus:ring-0 sm:text-sm sm:leading-6" placeholder="janesmith">
                  </div>
                </div>
              </div>

              <div class="col-span-full">
                <label for="timezone" class="block text-sm font-medium leading-6 text-black">Timezone</label>
                <div class="mt-2">
                  <select id="timezone" name="timezone" class="block w-full rounded-md border bg-white/5 py-1.5 text-black shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6 [&_*]:text-black">
                    <option>Pacific Standard Time</option>
                    <option>Eastern Standard Time</option>
                    <option>Greenwich Mean Time</option>
                  </select>
                </div>
              </div> -->
          </div>

          <!-- <div class="mt-8 flex">
              <button type="submit" class="rounded-md bg-indigo-500 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-500">Guardar</button>
            </div> -->
        </form>
      </div>

      <div
        class="grid max-w-[1300px] grid-cols-1 gap-x-8 gap-y-10 px-4 py-16 sm:px-6 md:grid-cols-3 lg:px-8"
      >
        <div>
          <h2 class="text-base font-semibold leading-7 text-black">
            Información de envío
          </h2>
          <p class="mt-1 text-sm leading-6 text-gray-600">
            Actualice sus datos de envío.
          </p>
        </div>
        <div class="col-span-2">
          <div class="grid grid-cols-3 gap-8">
            {/* Aquí van las cartas */}
            <ClientAddresses user={user} client:load />
          </div>
          <div class="mt-6 border-t border-gray-900/5 px-6 py-6">
            <a
              href="/nueva_direccion"
              class="text-sm font-semibold leading-6 text-gray-900"
            >
              Agregar dirección <span aria-hidden="true">&rarr;</span>
            </a>
          </div>
        </div>

        <!-- <AddressFormComponent user={session} client:load /> -->
      </div>

      <div
        class="grid max-w-7xl grid-cols-1 gap-x-8 gap-y-10 px-4 py-16 sm:px-6 md:grid-cols-3 lg:px-8"
      >
        <div>
          <h2 class="text-base font-semibold leading-7 text-black">
            Cambiar contraseña
          </h2>
          <p class="mt-1 text-sm leading-6 text-gray-600">
            Actualicé la contraseña vinculada con su usuario.
          </p>
        </div>

        <form class="md:col-span-2">
          <div
            class="grid grid-cols-1 gap-x-6 gap-y-8 sm:max-w-xl sm:grid-cols-6"
          >
            <!-- <div class="col-span-full">
              <label
                for="current-password"
                class="block text-sm font-medium leading-6 text-black"
                >Contraseña actual</label
              >
              <div class="mt-2">
                <input
                  id="current-password"
                  name="current_password"
                  type="password"
                  autocomplete="current-password"
                  class="block w-full rounded-md border bg-white/5 py-1.5 text-black shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6"
                />
              </div>
            </div> -->

            <div class="col-span-full">
              <label
                for="new-password"
                class="block text-sm font-medium leading-6 text-black"
                >Nueva contraseña</label
              >
              <div class="mt-2">
                <input
                  id="new-password"
                  name="new_password"
                  type="password"
                  autocomplete="new-password"
                  class="block w-full rounded-md border bg-white/5 py-1.5 text-black shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6"
                />
              </div>
            </div>

            <div class="col-span-full">
              <label
                for="confirm-password"
                class="block text-sm font-medium leading-6 text-black"
                >Confirmar contraseña</label
              >
              <div class="mt-2">
                <input
                  id="confirm-password"
                  name="confirm_password"
                  type="password"
                  autocomplete="new-password"
                  class="block w-full rounded-md border bg-white/5 py-1.5 text-black shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6"
                />
              </div>
            </div>
          </div>

          <div class="mt-8 flex">
            <button
              type="button"
              id="submitButtonPassword"
              class="rounded-md bg-indigo-500 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-500"
              >Guardar</button
            >
          </div>
        </form>
      </div>

      <div
        class="grid max-w-7xl grid-cols-1 gap-x-8 gap-y-10 px-4 py-16 sm:px-6 md:grid-cols-3 lg:px-8"
      >
        <div>
          <h2 class="text-base font-semibold leading-7 text-black">
            Cerrar sesión
          </h2>
          <p class="mt-1 text-sm leading-6 text-gray-600">
            Porfavor ingrese su contraseña para confirmar que desea cerrar
            sesión en todos sus dispositivos.
          </p>
        </div>

        <form class="md:col-span-2">
          <!-- <div class="grid grid-cols-1 gap-x-6 gap-y-8 sm:max-w-xl sm:grid-cols-6">
              <div class="col-span-full">
                <label for="logout-password" class="block text-sm font-medium leading-6 text-black">Su contraseña</label>
                <div class="mt-2">
                  <input id="logout-password" name="password" type="password" autocomplete="current-password" class="block w-full rounded-md border bg-white/5 py-1.5 text-black shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6">
                </div>
              </div>
            </div> -->

          <div class="mt-8 flex">
            <button
              type="submit"
              class="rounded-md bg-indigo-500 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-500"
              >Cerrar sesión</button
            >
          </div>
        </form>
      </div>

      <div
        class="grid max-w-7xl grid-cols-1 gap-x-8 gap-y-10 px-4 py-16 sm:px-6 md:grid-cols-3 lg:px-8"
      >
        <div>
          <h2 class="text-base font-semibold leading-7 text-black">
            Borrar cuenta
          </h2>
          <p class="mt-1 text-sm leading-6 text-gray-600">
            ¿Ya no requiere de nuestros servicios? Puede borrar su cuenta aquí.
            Esta acción no es reversible. Toda la información relacionada con
            esta cuenta será borrada permanentemente
          </p>
        </div>

        <form class="flex items-start md:col-span-2">
          <button
            type="submit"
            class="rounded-md bg-red-500 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-400"
            >Sí, borrar mi cuenta</button
          >
        </form>
      </div>
    </div>
  </main>
</Layout>
<script>
  import { Toast } from "~/utils/alerts";
  import { apiPublic } from "~/utils/api";

  document.addEventListener("DOMContentLoaded", async () => {
    const passwordForm = document.getElementById("submitButtonPassword");

    const response = await fetch("/api/sessionData.json");
    const { email } = await response.json();
    passwordForm.addEventListener("click", async (event) => {
      event.preventDefault();
      // console.log(data, "data");
      const newPassword = document.getElementById("new-password").value;
      const confirmPassword = document.getElementById("confirm-password").value;

      // Check for empty inputs
      if (newPassword === "" || confirmPassword === "") {
        Toast.fire({
          title: "No deje vacíos los campos de contraseña.",
          icon: "warning",
        });
        return;
      }

      if (newPassword === confirmPassword) {
        try {
          const obj = {
            username: email,
            password: newPassword,
          };
          // Send data to backend (replace this with actual code)
          await apiPublic.auth.updatePassword.mutate(obj);
          // Display success message
          Toast.fire({
            title: "Contraseña cambiada exitosamente.",
            icon: "success",
          });
        } catch (error) {
          Toast.fire({
            title: "Ocurrió un error al cambiar la contraseña.",
            icon: "error",
          });
        }
      } else {
        // Display password mismatch error

        Toast.fire({
          title: "Las contraseñas no coinciden.",
          icon: "error",
        });
      }
    });
  });
</script>
