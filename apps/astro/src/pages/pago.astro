---
import { getSession } from "auth-astro/server";

import { apiPublic } from "~/utils/api";
import OrderForm from "~/components/forms/OrderForm";
import Layout from "~/layouts/Layout.astro";

let session = await getSession(Astro.request);
if (!session) {
  Astro.redirect("/");
}

const user = await apiPublic.users.show.query({
  email: session?.user?.email || undefined,
});

export const prerender = true;
---

<Layout title="pago">
  <div class="bg-white">
    <!-- Background color split screen for large screens -->
    <div class="fixed left-0 top-0 w-1/2 bg-white lg:block" aria-hidden="true">
    </div>
    <div
      class="fixed right-0 top-0 w-1/2 bg-gray-50 lg:block"
      aria-hidden="true"
    >
    </div>
    <div
      class="relative mx-auto grid max-w-7xl grid-cols-1 gap-x-16 lg:grid-cols-2 lg:px-8 xl:gap-x-48"
    >
      <h1 class="sr-only">Order information</h1>
      <section
        aria-labelledby="summary-heading"
        class="bg-gray-50 px-4 pb-10 pt-16 sm:px-6 lg:col-start-2 lg:row-start-1 lg:bg-transparent lg:px-0 lg:pb-16"
      >
        <div class="mx-auto max-w-lg lg:max-w-none">
          <h2 id="summary-heading" class="text-lg font-medium text-gray-900">
            Resumen de orden
          </h2>

          <ul
            role="list"
            id="order-list"
            class="divide-y divide-gray-200 text-sm font-medium text-gray-900"
          >
            <li class="flex items-start space-x-4 py-6">Sin datos</li>
          </ul>

          <dl
            class="hidden space-y-6 border-t border-gray-200 pt-6 text-sm font-medium text-gray-900 lg:block"
          >
            <div class="flex items-center justify-between">
              <dt class="text-gray-600">Subtotal</dt>
              <dd id="totalPrice">$0.00</dd>
            </div>

            <div class="flex items-center justify-between">
              <dt class="text-gray-600">Envío</dt>
              <dd id="shippingPrice">$0.00</dd>
            </div>

            <div class="flex items-center justify-between">
              <dt class="text-gray-600">IVA</dt>
              <dd id="taxPrice">$0.00</dd>
            </div>

            <div
              class="flex items-center justify-between border-t border-gray-200 pt-6"
            >
              <dt class="text-base">Total</dt>
              <dd id="orderTotalPrice" class="text-base">$0.00</dd>
            </div>
          </dl>

          <div
            class="fixed inset-x-0 bottom-0 flex flex-col-reverse text-sm font-medium text-gray-900 lg:hidden"
          >
            <div
              class="relative z-10 border-t border-gray-200 bg-white px-4 sm:px-6"
            >
              <div class="mx-auto max-w-lg">
                <button
                  type="button"
                  class="flex w-full items-center py-6 font-medium"
                  aria-expanded="false"
                >
                  <span class="mr-auto text-base">Total</span>
                  <span class="mr-2 text-base" id="orderTotalPrice">$0.00</span>
                  <svg
                    class="h-5 w-5 text-gray-500"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                    aria-hidden="true"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M14.77 12.79a.75.75 0 01-1.06-.02L10 8.832 6.29 12.77a.75.75 0 11-1.08-1.04l4.25-4.5a.75.75 0 011.08 0l4.25 4.5a.75.75 0 01-.02 1.06z"
                      clip-rule="evenodd"></path>
                  </svg>
                </button>
              </div>
            </div>

            <div>
              {
                /*     <!--
        Mobile summary overlay, show/hide based on mobile summary state.

        Entering: "transition-opacity ease-linear duration-300"
          From: "opacity-0"
          To: "opacity-100"
        Leaving: "transition-opacity ease-linear duration-300"
          From: "opacity-100"
          To: "opacity-0"
-->*/
              }
              <div
                class="fixed inset-0 bg-black bg-opacity-25"
                aria-hidden="true"
              >
              </div>

              {
                /*  <!--
        Mobile summary, show/hide based on mobile summary state.

        Entering: "transition ease-in-out duration-300 transform"
          From: "translate-y-full"
          To: "translate-y-0"
        Leaving: "transition ease-in-out duration-300 transform"
          From: "translate-y-0"
          To: "translate-y-full"
--> */
              }
              <div class="relative bg-white px-4 py-6 sm:px-6">
                <dl class="mx-auto max-w-lg space-y-6">
                  <div class="flex items-center justify-between">
                    <dt class="text-gray-600">Subtotal</dt>
                    <dd id="totalPrice">$0.00</dd>
                  </div>

                  <div class="flex items-center justify-between">
                    <dt class="text-gray-600">Envío</dt>
                    <dd id="shippingPrice">$0.00</dd>
                  </div>

                  <div class="flex items-center justify-between">
                    <dt class="text-gray-600">IVA</dt>
                    <dd id="taxPrice">$0.00</dd>
                  </div>
                </dl>
              </div>
            </div>
          </div>
        </div>
      </section>
      <OrderForm user={user} client:load />
    </div>
  </div>
</Layout>

<script type="text/javascript">
  async function orderSummary() {
    const response = await fetch("/api/sessionData.json");
    const data = await response.json();
    const userDiscount = (data?.role?.discount || 0) / 10000;
    var value = JSON.parse(localStorage.getItem("carrito"));
    let totalPrice = value
      .map(({ price, quantity }) => price * (1 - userDiscount) * quantity)
      .reduce((acc, curr) => acc + curr, 0);
    const formattedPrice = (totalPrice /= 100);
    const shippingPrice = totalPrice < 200000 ? 0 : 50000;

    const priceTax = totalPrice * 0.16;

    document.getElementById("totalPrice").innerHTML =
      formattedPrice.toLocaleString("es-MX", {
        style: "currency",
        currency: `mxn`,
      });
    document.getElementById("shippingPrice").innerHTML =
      shippingPrice.toLocaleString("es-MX", {
        style: "currency",
        currency: `mxn`,
      });
    document.getElementById("taxPrice").innerHTML = priceTax.toLocaleString(
      "es-MX",
      {
        style: "currency",
        currency: `mxn`,
      },
    );
    document.getElementById("orderTotalPrice").innerHTML = (
      priceTax +
      formattedPrice +
      shippingPrice
    ).toLocaleString("es-MX", {
      style: "currency",
      currency: `mxn`,
    });
    const liItems = [];

    for (item of value) {
      const sample = `<div class="flex items-start space-x-4 py-6">
                <img
                src="https://d26xfdx1w8q2y3.cloudfront.net/${item.image.path}/${
        item.image.original
      }" 
                  alt=${item.image.alt}
                  class="h-20 w-20 flex-none rounded-md object-cover object-center"
                  />
                  <div class="flex-auto space-y-1">
                    <h3>${item.name}</h3>
                    <p class="text-gray-500">Cantidad: ${item.quantity}</p>
                    <p class="text-gray-500">Precio unitario: ${(
                      (item.price * (1 - userDiscount)) /
                      100
                    ).toLocaleString("es-MX", {
                      style: "currency",
                      currency: `mxn`,
                    })}</p>
                    </div>
                    <p class="flex-none text-base font-medium">${(
                      (item.price * (1 - userDiscount) * item.quantity) /
                      100
                    ).toLocaleString("es-MX", {
                      style: "currency",
                      currency: `mxn`,
                    })}</p>
                      </div>`;

      liItems.push(`<li>${sample}</li>`);
    }

    var ulElement = document.getElementById("order-list");
    ulElement.innerHTML = liItems.join("");
  }
  orderSummary();
</script>
